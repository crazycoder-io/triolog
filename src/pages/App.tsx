import React from "react";
import {Grid, List, ListItemText, ListItem, CircularProgress} from "@material-ui/core";
import firebase from "../firebase";
import {Tool, LogPanel, NavBar} from "../components";
import "../styles/App.css";

const db = firebase.default.firestore();

function App() {
    const [subjectList, setSubjectList] = React.useState<Array<{id: string; subject: string}> | []>([]);
    const [listLoading, setListLoading] = React.useState<boolean>(false);

    const [tools] = React.useState([
        {
            text: "testComponent1",
        },
        {
            text: "testComponent2",
        },
        {
            text: "testComponent3",
        },
    ]);
    const [work, setWork] = React.useState<
        Array<{text: string; offset: {x: number | undefined; y: number | undefined}}>
    >([]);

    const addTool = (item: {text: string}, offset: {x: number | undefined; y: number | undefined}) => {
        if (item && item.text !== "") {
            setWork(prev => [...prev, {text: item.text, offset}]);
        }
    };

    const moveTool = (item: {text: string}, offset: {x: number | undefined; y: number | undefined}) => {
        if (item && item.text !== "") {
            const newItemList = work.filter(t => t.text !== item.text);
            setWork([...newItemList, {text: item.text, offset}]);
        }
    };

    React.useEffect(() => {
        async function getSubjects() {
            setListLoading(true);
            const subjects = await db.collection("subjects").get();
            subjects.forEach(doc => {
                if (!subjectList.some(d => d.id === doc.id)) {
                    setSubjectList(prev => [...prev, {id: doc.id, subject: doc.data().subject}]);
                }
            });
            setListLoading(false);
        }

        getSubjects();
    }, []);

    return (
        <div className="container">
            {/* <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head> */}

            <Grid container>
                <Grid item xs={12}>
                    <NavBar />
                </Grid>
                <Grid container className="workPanel">
                    <Grid item md={2} className="listPanel">
                        <List component="data" aria-label="primary" className="list">
                            {listLoading && <CircularProgress />}
                            {subjectList.length > 0 &&
                                subjectList.map(subject => (
                                    <ListItem button key={subject.id} className="list-item">
                                        <ListItemText
                                            className="list-item-text"
                                            color="black"
                                            primary={subject.subject}
                                        />
                                    </ListItem>
                                ))}
                        </List>
                    </Grid>
                    <Grid item container direction="column" md={8}>
                        <Grid item className="designPanel">
                            <div className="workField">
                                {work.map(item => (
                                    <div
                                        key={item.text + new Date().toUTCString()}
                                        style={{
                                            position: item.offset.x ? "absolute" : "initial",
                                            left: item.offset.x ? item.offset.x + "px" : "",
                                            top: item.offset.y ? item.offset.y + "px" : "",
                                        }}>
                                        <Tool item={item} onDrop={moveTool} />
                                    </div>
                                ))}
                            </div>
                        </Grid>
                        <Grid item className="logPanel">
                            <LogPanel />
                        </Grid>
                    </Grid>
                    <Grid item md={2} className="toolPanel">
                        <ul>
                            {tools.map(item => (
                                <Tool key={item.text} item={item} onDrop={addTool} />
                            ))}
                        </ul>
                    </Grid>
                </Grid>
            </Grid>
        </div>
    );
}

export default App;
